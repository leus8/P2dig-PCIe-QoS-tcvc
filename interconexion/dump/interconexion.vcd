$date
	Wed Nov 11 00:31:09 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbench $end
$var wire 1 ! reset_L $end
$var wire 1 " clk $end
$var wire 1 # VC1_error_output $end
$var wire 1 $ VC1_empty $end
$var wire 1 % VC0_error_output $end
$var wire 1 & VC0_empty $end
$var wire 1 ' Main_wr $end
$var wire 1 ( Main_full $end
$var wire 1 ) Main_error_output $end
$var wire 1 * Main_empty $end
$var wire 6 + Main_data_in [5:0] $end
$var wire 1 , D1_rd $end
$var wire 1 - D1_error_output $end
$var wire 1 . D1_empty $end
$var wire 6 / D1_data_out [5:0] $end
$var wire 1 0 D0_rd $end
$var wire 1 1 D0_error_output $end
$var wire 1 2 D0_empty $end
$var wire 6 3 D0_data_out [5:0] $end
$scope module intc $end
$var wire 1 4 vc0_delay $end
$var wire 1 5 valid_in_vc1 $end
$var wire 1 6 valid_in_vc0 $end
$var wire 1 ! reset_L $end
$var wire 1 7 demux_vcid_valid_in $end
$var wire 6 8 demux_vcid_in [5:0] $end
$var wire 1 9 demux_dest_valid_in $end
$var wire 6 : demux_dest_data_in [5:0] $end
$var wire 6 ; data_in_vc1 [5:0] $end
$var wire 6 < data_in_vc0 [5:0] $end
$var wire 1 " clk $end
$var wire 1 = VC1_rd $end
$var wire 1 > VC1_full $end
$var wire 1 # VC1_error_output $end
$var wire 1 $ VC1_empty $end
$var wire 6 ? VC1_data_out [5:0] $end
$var wire 1 @ VC1_almost_full $end
$var wire 1 A VC1_almost_empty $end
$var wire 1 B VC0_rd $end
$var wire 1 C VC0_full $end
$var wire 1 % VC0_error_output $end
$var wire 1 & VC0_empty $end
$var wire 6 D VC0_data_out [5:0] $end
$var wire 1 E VC0_almost_full $end
$var wire 1 F VC0_almost_empty $end
$var wire 1 ' Main_wr $end
$var wire 1 G Main_rd $end
$var wire 1 ( Main_full $end
$var wire 1 ) Main_error_output $end
$var wire 1 * Main_empty $end
$var wire 6 H Main_data_out [5:0] $end
$var wire 6 I Main_data_in [5:0] $end
$var wire 1 J Main_almost_full $end
$var wire 1 K Main_almost_empty $end
$var wire 1 L D1_wr $end
$var wire 1 , D1_rd $end
$var wire 1 M D1_full $end
$var wire 1 - D1_error_output $end
$var wire 1 . D1_empty $end
$var wire 6 N D1_data_out [5:0] $end
$var wire 6 O D1_data_in [5:0] $end
$var wire 1 P D1_almost_full $end
$var wire 1 Q D1_almost_empty $end
$var wire 1 R D0_wr $end
$var wire 1 0 D0_rd $end
$var wire 1 S D0_full $end
$var wire 1 1 D0_error_output $end
$var wire 1 2 D0_empty $end
$var wire 6 T D0_data_out [5:0] $end
$var wire 6 U D0_data_in [5:0] $end
$var wire 1 V D0_almost_full $end
$var wire 1 W D0_almost_empty $end
$scope module d_dest $end
$var wire 1 X selector $end
$var wire 1 ! reset_L $end
$var wire 1 9 demux_dest_valid_in $end
$var wire 6 Y demux_dest_data_in [5:0] $end
$var wire 1 " clk $end
$var reg 6 Z D0_data_in [5:0] $end
$var reg 1 R D0_wr $end
$var reg 6 [ D1_data_in [5:0] $end
$var reg 1 L D1_wr $end
$var reg 6 \ data_recordar0 [5:0] $end
$var reg 6 ] data_recordar1 [5:0] $end
$var reg 1 ^ valid_recordar0 $end
$var reg 1 _ valid_recordar1 $end
$upscope $end
$scope module d_vcid $end
$var wire 1 ` selector $end
$var wire 1 ! reset_L $end
$var wire 1 7 demux_vcid_valid_in $end
$var wire 6 a demux_vcid_in [5:0] $end
$var wire 1 " clk $end
$var reg 6 b data_in_vc0 [5:0] $end
$var reg 6 c data_in_vc1 [5:0] $end
$var reg 6 d data_recordar0 [5:0] $end
$var reg 6 e data_recordar1 [5:0] $end
$var reg 1 6 valid_in_vc0 $end
$var reg 1 5 valid_in_vc1 $end
$var reg 1 f valid_recordar0 $end
$var reg 1 g valid_recordar1 $end
$upscope $end
$scope module f_d0 $end
$var wire 6 h D0_data_in [5:0] $end
$var wire 1 R D0_wr $end
$var wire 1 ! reset_L $end
$var wire 1 " clk $end
$var wire 1 0 D0_rd $end
$var wire 1 S D0_full $end
$var wire 1 1 D0_error_output $end
$var wire 1 2 D0_empty $end
$var wire 6 i D0_data_out [5:0] $end
$var wire 1 V D0_almost_full $end
$var wire 1 W D0_almost_empty $end
$scope module D0 $end
$var wire 6 j fifo_data_in [5:0] $end
$var wire 1 2 fifo_empty $end
$var wire 1 S fifo_full $end
$var wire 1 R fifo_wr $end
$var wire 1 ! reset_L $end
$var wire 4 k nxtaddr [3:0] $end
$var wire 1 l full $end
$var wire 1 0 fifo_rd $end
$var wire 1 V fifo_almost_full $end
$var wire 1 W fifo_almost_empty $end
$var wire 1 m empty $end
$var wire 1 " clk $end
$var reg 1 1 error_output $end
$var reg 6 n fifo_data_out [5:0] $end
$var reg 4 o o_fill [3:0] $end
$var reg 1 p overrun $end
$var reg 4 q rdaddr [3:0] $end
$var reg 1 r underrun $end
$var reg 4 s wraddr [3:0] $end
$upscope $end
$upscope $end
$scope module f_d1 $end
$var wire 6 t D1_data_in [5:0] $end
$var wire 1 L D1_wr $end
$var wire 1 ! reset_L $end
$var wire 1 " clk $end
$var wire 1 , D1_rd $end
$var wire 1 M D1_full $end
$var wire 1 - D1_error_output $end
$var wire 1 . D1_empty $end
$var wire 6 u D1_data_out [5:0] $end
$var wire 1 P D1_almost_full $end
$var wire 1 Q D1_almost_empty $end
$scope module D1 $end
$var wire 6 v fifo_data_in [5:0] $end
$var wire 1 . fifo_empty $end
$var wire 1 M fifo_full $end
$var wire 1 L fifo_wr $end
$var wire 1 ! reset_L $end
$var wire 4 w nxtaddr [3:0] $end
$var wire 1 x full $end
$var wire 1 , fifo_rd $end
$var wire 1 P fifo_almost_full $end
$var wire 1 Q fifo_almost_empty $end
$var wire 1 y empty $end
$var wire 1 " clk $end
$var reg 1 - error_output $end
$var reg 6 z fifo_data_out [5:0] $end
$var reg 4 { o_fill [3:0] $end
$var reg 1 | overrun $end
$var reg 4 } rdaddr [3:0] $end
$var reg 1 ~ underrun $end
$var reg 4 !" wraddr [3:0] $end
$upscope $end
$upscope $end
$scope module f_main $end
$var wire 1 ! reset_L $end
$var wire 1 " clk $end
$var wire 1 ' Main_wr $end
$var wire 1 G Main_rd $end
$var wire 1 ( Main_full $end
$var wire 1 ) Main_error_output $end
$var wire 1 * Main_empty $end
$var wire 6 "" Main_data_out [5:0] $end
$var wire 6 #" Main_data_in [5:0] $end
$var wire 1 J Main_almost_full $end
$var wire 1 K Main_almost_empty $end
$scope module Main $end
$var wire 1 * fifo_empty $end
$var wire 1 ( fifo_full $end
$var wire 1 ! reset_L $end
$var wire 4 $" nxtaddr [3:0] $end
$var wire 1 %" full $end
$var wire 1 ' fifo_wr $end
$var wire 1 G fifo_rd $end
$var wire 6 &" fifo_data_in [5:0] $end
$var wire 1 J fifo_almost_full $end
$var wire 1 K fifo_almost_empty $end
$var wire 1 '" empty $end
$var wire 1 " clk $end
$var reg 1 ) error_output $end
$var reg 6 (" fifo_data_out [5:0] $end
$var reg 4 )" o_fill [3:0] $end
$var reg 1 *" overrun $end
$var reg 4 +" rdaddr [3:0] $end
$var reg 1 ," underrun $end
$var reg 4 -" wraddr [3:0] $end
$upscope $end
$upscope $end
$scope module f_vc0 $end
$var wire 6 ." data_in_vc0 [5:0] $end
$var wire 1 6 valid_in_vc0 $end
$var wire 1 ! reset_L $end
$var wire 1 " clk $end
$var wire 1 B VC0_rd $end
$var wire 1 C VC0_full $end
$var wire 1 % VC0_error_output $end
$var wire 1 & VC0_empty $end
$var wire 6 /" VC0_data_out [5:0] $end
$var wire 1 E VC0_almost_full $end
$var wire 1 F VC0_almost_empty $end
$scope module VC0 $end
$var wire 6 0" fifo_data_in [5:0] $end
$var wire 1 & fifo_empty $end
$var wire 1 C fifo_full $end
$var wire 1 6 fifo_wr $end
$var wire 1 ! reset_L $end
$var wire 16 1" nxtaddr [15:0] $end
$var wire 1 2" full $end
$var wire 1 B fifo_rd $end
$var wire 1 E fifo_almost_full $end
$var wire 1 F fifo_almost_empty $end
$var wire 1 3" empty $end
$var wire 1 " clk $end
$var reg 1 % error_output $end
$var reg 6 4" fifo_data_out [5:0] $end
$var reg 16 5" o_fill [15:0] $end
$var reg 1 6" overrun $end
$var reg 16 7" rdaddr [15:0] $end
$var reg 1 8" underrun $end
$var reg 16 9" wraddr [15:0] $end
$upscope $end
$upscope $end
$scope module f_vc1 $end
$var wire 6 :" data_in_vc1 [5:0] $end
$var wire 1 5 valid_in_vc1 $end
$var wire 1 ! reset_L $end
$var wire 1 " clk $end
$var wire 1 = VC1_rd $end
$var wire 1 > VC1_full $end
$var wire 1 # VC1_error_output $end
$var wire 1 $ VC1_empty $end
$var wire 6 ;" VC1_data_out [5:0] $end
$var wire 1 @ VC1_almost_full $end
$var wire 1 A VC1_almost_empty $end
$scope module VC1 $end
$var wire 6 <" fifo_data_in [5:0] $end
$var wire 1 $ fifo_empty $end
$var wire 1 > fifo_full $end
$var wire 1 5 fifo_wr $end
$var wire 1 ! reset_L $end
$var wire 16 =" nxtaddr [15:0] $end
$var wire 1 >" full $end
$var wire 1 = fifo_rd $end
$var wire 1 @ fifo_almost_full $end
$var wire 1 A fifo_almost_empty $end
$var wire 1 ?" empty $end
$var wire 1 " clk $end
$var reg 1 # error_output $end
$var reg 6 @" fifo_data_out [5:0] $end
$var reg 16 A" o_fill [15:0] $end
$var reg 1 B" overrun $end
$var reg 16 C" rdaddr [15:0] $end
$var reg 1 D" underrun $end
$var reg 16 E" wraddr [15:0] $end
$upscope $end
$upscope $end
$scope module mux1 $end
$var wire 6 F" VC0_data_out [5:0] $end
$var wire 6 G" VC1_data_out [5:0] $end
$var wire 1 4 vc0_delay $end
$var wire 1 ! reset_L $end
$var wire 1 " clk $end
$var wire 1 = VC1_rd $end
$var wire 1 B VC0_rd $end
$var reg 6 H" data_out_recordar [5:0] $end
$var reg 6 I" demux_dest_data_in [5:0] $end
$var reg 1 9 demux_dest_valid_in $end
$var reg 1 J" valid_in_recordar $end
$upscope $end
$scope module pop_main $end
$var wire 6 K" Main_data_out [5:0] $end
$var wire 1 * Main_empty $end
$var wire 1 E VC0_almost_full $end
$var wire 1 @ VC1_almost_full $end
$var wire 1 ! reset_L $end
$var wire 1 " clk $end
$var reg 1 G Main_rd $end
$var reg 6 L" data_out_recordar [5:0] $end
$var reg 6 M" demux_vcid_in [5:0] $end
$var reg 1 7 demux_vcid_valid_in $end
$var reg 1 N" demux_vcid_valid_in_recordar $end
$upscope $end
$scope module pop_vc0 $end
$var wire 1 S D0_full $end
$var wire 1 M D1_full $end
$var wire 1 & VC0_empty $end
$var wire 1 $ VC1_empty $end
$var wire 1 ! reset_L $end
$var wire 1 " clk $end
$var reg 1 B VC0_rd $end
$var reg 1 = VC1_rd $end
$var reg 1 O" and_d0d1 $end
$var reg 1 P" and_vc0_0 $end
$var reg 1 Q" and_vc0_1 $end
$var reg 1 4 vc0_delay $end
$upscope $end
$upscope $end
$scope module prb $end
$var wire 6 R" D0_data_out [5:0] $end
$var wire 1 2 D0_empty $end
$var wire 1 1 D0_error_output $end
$var wire 6 S" D1_data_out [5:0] $end
$var wire 1 . D1_empty $end
$var wire 1 - D1_error_output $end
$var wire 1 * Main_empty $end
$var wire 1 ) Main_error_output $end
$var wire 1 ( Main_full $end
$var wire 1 & VC0_empty $end
$var wire 1 % VC0_error_output $end
$var wire 1 $ VC1_empty $end
$var wire 1 # VC1_error_output $end
$var reg 1 0 D0_rd $end
$var reg 1 , D1_rd $end
$var reg 6 T" Main_data_in [5:0] $end
$var reg 1 ' Main_wr $end
$var reg 1 " clk $end
$var reg 1 ! reset_L $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 T"
b0 S"
b0 R"
xQ"
xP"
xO"
xN"
bx M"
bx L"
bx K"
xJ"
bx I"
bx H"
bx G"
bx F"
bx E"
xD"
bx C"
xB"
bx A"
bx @"
x?"
x>"
bx ="
bx <"
bx ;"
bx :"
bx 9"
x8"
bx 7"
x6"
bx 5"
bx 4"
x3"
x2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
x,"
bx +"
x*"
bx )"
bx ("
x'"
b0 &"
x%"
bx $"
b0 #"
bx ""
bx !"
x~
bx }
x|
bx {
b0 z
xy
xx
bx w
bx v
b0 u
bx t
bx s
xr
bx q
xp
bx o
b0 n
xm
xl
bx k
bx j
b0 i
bx h
xg
xf
bx e
bx d
bx c
bx b
bx a
x`
x_
x^
bx ]
bx \
bx [
bx Z
bx Y
xX
xW
xV
bx U
b0 T
xS
xR
xQ
xP
bx O
b0 N
xM
xL
xK
xJ
b0 I
bx H
xG
xF
xE
bx D
xC
xB
xA
x@
bx ?
x>
x=
bx <
bx ;
bx :
x9
bx 8
x7
x6
x5
x4
b0 3
x2
x1
00
b0 /
x.
x-
0,
b0 +
x*
x)
x(
0'
x&
x%
x$
x#
0"
0!
$end
#80
0%
0#
b0 H"
0J"
0=
0B
04
0)
b0 H
b0 ""
b0 ("
b0 K"
0`
0g
0f
b0 e
b0 d
b0 D
b0 /"
b0 4"
b0 F"
0P"
b0 ?
b0 ;"
b0 @"
b0 G"
0Q"
0G
0N"
b0 L"
0X
0_
0^
b0 ]
b0 \
01
0-
0O"
1'
0*"
b1 $"
b0 -"
0,"
b0 +"
0(
0%"
1*
1'"
0K
0J
b0 )"
07
b0 8
b0 a
b0 M"
05
06
b0 ;
b0 c
b0 :"
b0 <"
b0 <
b0 b
b0 ."
b0 0"
06"
b1 1"
b0 9"
08"
b0 7"
0C
02"
1&
13"
0F
0E
b0 5"
0B"
b1 ="
b0 E"
0D"
b0 C"
0>
0>"
1$
1?"
0A
0@
b0 A"
09
b0 :
b0 Y
b0 I"
0L
0R
b0 O
b0 [
b0 t
b0 v
b0 U
b0 Z
b0 h
b0 j
0p
b1 k
b0 s
0r
b0 q
0S
0l
12
1m
0W
0V
b0 o
0|
b1 w
b0 !"
0~
b0 }
0M
0x
1.
1y
0Q
0P
b0 {
b101 +
b101 I
b101 #"
b101 &"
b101 T"
1!
1"
#160
0"
#240
b101 L"
b101 H
b101 ""
b101 ("
b101 K"
1G
1N"
b10111 +
b10111 I
b10111 #"
b10111 &"
b10111 T"
0*
0'"
1K
b1 )"
b10 $"
b1 -"
1"
#320
0"
#400
b10111 L"
b10111 H
b10111 ""
b10111 ("
b10111 K"
1f
b101 d
b11 $"
b10 -"
b1 +"
17
b101 8
b101 a
b101 M"
b11100 +
b11100 I
b11100 #"
b11100 &"
b11100 T"
1"
#480
0"
#560
b11100 L"
b10111 d
b11100 H
b11100 ""
b11100 ("
b11100 K"
b1 +
b1 I
b1 #"
b1 &"
b1 T"
16
b101 <
b101 b
b101 ."
b101 0"
b10111 8
b10111 a
b10111 M"
b10 +"
b100 $"
b11 -"
1"
#640
0"
#720
b101 H"
b101 D
b101 /"
b101 4"
b101 F"
1J"
b1 L"
1B
b1 H
b1 ""
b1 ("
b1 K"
b11100 d
1P"
b1 $"
b0 -"
b11 +"
b11100 8
b11100 a
b11100 M"
b10111 <
b10111 b
b10111 ."
b10111 0"
b10 1"
b1 9"
0&
03"
1F
b1 5"
b100110 +
b100110 I
b100110 #"
b100110 &"
b100110 T"
1"
#800
0"
#880
b10111 H"
b100110 L"
1^
b101 \
b10111 D
b10111 /"
b10111 4"
b10111 F"
b1 d
b100110 H
b100110 ""
b100110 ("
b100110 K"
b10100 +
b10100 I
b10100 #"
b10100 &"
b10100 T"
b101 :
b101 Y
b101 I"
19
b1 7"
b11 1"
b10 9"
b11100 <
b11100 b
b11100 ."
b11100 0"
b1 8
b1 a
b1 M"
b0 +"
b10 $"
b1 -"
1"
#960
0"
#1040
b10100 L"
1g
0f
b100110 e
b11100 H"
1_
0^
b10111 ]
b10100 H
b10100 ""
b10100 ("
b10100 K"
1`
b0 d
b11100 D
b11100 /"
b11100 4"
b11100 F"
1X
b0 \
b11 $"
b10 -"
b1 +"
b100110 8
b100110 a
b100110 M"
b1 <
b1 b
b1 ."
b1 0"
b100 1"
b11 9"
b10 7"
b10111 :
b10111 Y
b10111 I"
1R
b101 U
b101 Z
b101 h
b101 j
b101000 +
b101000 I
b101000 #"
b101000 &"
b101000 T"
1"
#1120
0"
#1200
b101 3
b101 T
b101 i
b101 n
b101 R"
b1 H"
0g
1f
b10100 d
b101000 L"
10
b11100 ]
b1 D
b1 /"
b1 4"
b1 F"
0`
b0 e
b101000 H
b101000 ""
b101000 ("
b101000 K"
02
0m
1W
b1 o
b10 k
b1 s
0R
1L
b10111 O
b10111 [
b10111 t
b10111 v
b11100 :
b11100 Y
b11100 I"
b11 7"
b101 1"
b100 9"
06
15
b100110 ;
b100110 c
b100110 :"
b100110 <"
b10100 8
b10100 a
b10100 M"
b10 +"
b100 $"
b11 -"
1"
#1280
0"
#1360
b100110 ?
b100110 ;"
b100110 @"
b100110 G"
1g
0f
b101000 e
b100110 H"
1=
0B
14
0_
1^
b1 \
b101000 H
b101000 ""
b101000 ("
b101000 K"
1`
b0 d
b0 D
b0 /"
b0 4"
b0 F"
0P"
1Q"
0X
b0 ]
b0 3
b0 T
b0 i
b0 n
b0 R"
00
b10111 /
b10111 N
b10111 u
b10111 z
b10111 S"
1,
b1 $"
b0 -"
b11 +"
b101000 8
b101000 a
b101000 M"
05
16
b10100 <
b10100 b
b10100 ."
b10100 0"
b100 7"
1&
13"
0F
b0 5"
b10 ="
b1 E"
0$
0?"
1A
b1 A"
b1 :
b1 Y
b1 I"
b11100 O
b11100 [
b11100 t
b11100 v
b1 q
12
1m
0W
b0 o
b10 w
b1 !"
0.
0y
1Q
b1 {
1"
#1440
0"
#1520
b10100 D
b10100 /"
b10100 4"
b10100 F"
b10100 H"
0=
1B
04
b11100 /
b11100 N
b11100 u
b11100 z
b11100 S"
b100110 \
b0 ?
b0 ;"
b0 @"
b0 G"
0Q"
1P"
b101000 H
b101000 ""
b101000 ("
b101000 K"
b1 }
b11 w
b10 !"
0L
1R
b1 U
b1 Z
b1 h
b1 j
b100110 :
b100110 Y
b100110 I"
1$
1?"
0A
b0 A"
b1 C"
0&
03"
1F
b1 5"
b110 1"
b101 9"
06
15
b101000 ;
b101000 c
b101000 :"
b101000 <"
b0 +"
b10 $"
b1 -"
1"
#1600
0"
#1680
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H"
1=
0B
14
1_
0^
b10100 ]
b101000 H
b101000 ""
b101000 ("
b101000 K"
b0 D
b0 /"
b0 4"
b0 F"
0P"
1Q"
1X
b0 \
b1 3
b1 T
b1 i
b1 n
b1 R"
10
b0 /
b0 N
b0 u
b0 z
b0 S"
0,
b11 $"
b10 -"
b1 +"
b101 7"
1&
13"
0F
b0 5"
b11 ="
b10 E"
0$
0?"
1A
b1 A"
b10100 :
b10100 Y
b10100 I"
b100110 U
b100110 Z
b100110 h
b100110 j
b11 k
b10 s
02
0m
1W
b1 o
b10 }
1.
1y
0Q
b0 {
1"
#1760
0"
#1840
0_
1^
b101000 \
b100110 3
b100110 T
b100110 i
b100110 n
b100110 R"
0X
b0 ]
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H
b101000 ""
b101000 ("
b101000 K"
b10 q
b100 k
b11 s
0R
1L
b10100 O
b10100 [
b10100 t
b10100 v
b101000 :
b101000 Y
b101000 I"
b10 C"
b100 ="
b11 E"
b10 +"
b100 $"
b11 -"
1"
#1920
0"
#2000
b101000 H
b101000 ""
b101000 ("
b101000 K"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b0 3
b0 T
b0 i
b0 n
b0 R"
00
b10100 /
b10100 N
b10100 u
b10100 z
b10100 S"
1,
b1 $"
b0 -"
b11 +"
b101 ="
b100 E"
b11 C"
0L
1R
b101000 U
b101000 Z
b101000 h
b101000 j
b11 q
12
1m
0W
b0 o
b100 w
b11 !"
0.
0y
1Q
b1 {
1"
#2080
0"
#2160
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
0,
b0 /
b0 N
b0 u
b0 z
b0 S"
10
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H
b101000 ""
b101000 ("
b101000 K"
1.
1y
0Q
b0 {
b11 }
02
0m
1W
b1 o
b1 k
b0 s
b100 C"
b110 ="
b101 E"
b0 +"
b10 $"
b1 -"
1"
#2240
0"
#2320
b101000 H
b101000 ""
b101000 ("
b101000 K"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b11 $"
b10 -"
b1 +"
b111 ="
b110 E"
b101 C"
b10 k
b1 s
b0 q
1"
#2400
0"
#2480
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H
b101000 ""
b101000 ("
b101000 K"
b1 q
b11 k
b10 s
b110 C"
b1000 ="
b111 E"
b10 +"
b100 $"
b11 -"
1"
#2560
0"
#2640
b101000 H
b101000 ""
b101000 ("
b101000 K"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b1 $"
b0 -"
b11 +"
b1001 ="
b1000 E"
b111 C"
b100 k
b11 s
b10 q
1"
#2720
0"
#2800
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H
b101000 ""
b101000 ("
b101000 K"
b11 q
b1 k
b0 s
b1000 C"
b1010 ="
b1001 E"
b0 +"
b10 $"
b1 -"
1"
#2880
0"
#2960
b101000 H
b101000 ""
b101000 ("
b101000 K"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b11 $"
b10 -"
b1 +"
b1011 ="
b1010 E"
b1001 C"
b10 k
b1 s
b0 q
1"
#3040
0"
#3120
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H
b101000 ""
b101000 ("
b101000 K"
b1 q
b11 k
b10 s
b1010 C"
b1100 ="
b1011 E"
b10 +"
b100 $"
b11 -"
1"
#3200
0"
#3280
b101000 H
b101000 ""
b101000 ("
b101000 K"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b1 $"
b0 -"
b11 +"
b1101 ="
b1100 E"
b1011 C"
b100 k
b11 s
b10 q
1"
#3360
0"
#3440
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H
b101000 ""
b101000 ("
b101000 K"
b11 q
b1 k
b0 s
b1100 C"
b1110 ="
b1101 E"
b0 +"
b10 $"
b1 -"
1"
#3520
0"
#3600
b101000 H
b101000 ""
b101000 ("
b101000 K"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b11 $"
b10 -"
b1 +"
b1111 ="
b1110 E"
b1101 C"
b10 k
b1 s
b0 q
1"
#3680
0"
#3760
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H
b101000 ""
b101000 ("
b101000 K"
b1 q
b11 k
b10 s
b1110 C"
b10000 ="
b1111 E"
b10 +"
b100 $"
b11 -"
1"
#3840
0"
#3920
b101000 H
b101000 ""
b101000 ("
b101000 K"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b1 $"
b0 -"
b11 +"
b1 ="
b0 E"
b1111 C"
b100 k
b11 s
b10 q
1"
#4000
0"
#4080
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H
b101000 ""
b101000 ("
b101000 K"
b11 q
b1 k
b0 s
b0 C"
b10 ="
b1 E"
b0 +"
b10 $"
b1 -"
1"
#4160
0"
#4240
b101000 H
b101000 ""
b101000 ("
b101000 K"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b11 $"
b10 -"
b1 +"
b11 ="
b10 E"
b1 C"
b10 k
b1 s
b0 q
1"
#4320
0"
#4400
b101000 3
b101000 T
b101000 i
b101000 n
b101000 R"
b101000 ?
b101000 ;"
b101000 @"
b101000 G"
b101000 H
b101000 ""
b101000 ("
b101000 K"
b1 q
b11 k
b10 s
b10 C"
b100 ="
b11 E"
b10 +"
b100 $"
b11 -"
1"
