/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "mux.v:1" *)
module mux_estr(clk, reset_L, selector, data_in0, valid_in0, data_in1, valid_in1, valid_out, data_out);
  (* src = "mux.v:26" *)
  wire [5:0] _000_;
  (* src = "mux.v:26" *)
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  (* src = "mux.v:2" *)
  input clk;
  (* src = "mux.v:5" *)
  input [5:0] data_in0;
  (* src = "mux.v:7" *)
  input [5:0] data_in1;
  (* src = "mux.v:10" *)
  output [5:0] data_out;
  (* src = "mux.v:3" *)
  input reset_L;
  (* src = "mux.v:4" *)
  input selector;
  (* src = "mux.v:6" *)
  input valid_in0;
  (* src = "mux.v:8" *)
  input valid_in1;
  (* src = "mux.v:9" *)
  output valid_out;
  NOR _051_ (
    .A(_006_),
    .B(_004_),
    .Y(_007_)
  );
  NAND _052_ (
    .A(selector),
    .B(data_in1[0]),
    .Y(_008_)
  );
  NAND _053_ (
    .A(_002_),
    .B(data_in0[0]),
    .Y(_009_)
  );
  NAND _054_ (
    .A(_009_),
    .B(_008_),
    .Y(_010_)
  );
  NOR _055_ (
    .A(_010_),
    .B(_007_),
    .Y(_011_)
  );
  NOT _056_ (
    .A(data_out[0]),
    .Y(_012_)
  );
  NAND _057_ (
    .A(_007_),
    .B(_012_),
    .Y(_013_)
  );
  NAND _058_ (
    .A(_013_),
    .B(reset_L),
    .Y(_014_)
  );
  NOR _059_ (
    .A(_014_),
    .B(_011_),
    .Y(_000_[0])
  );
  NAND _060_ (
    .A(data_in1[1]),
    .B(selector),
    .Y(_015_)
  );
  NAND _061_ (
    .A(data_in0[1]),
    .B(_002_),
    .Y(_016_)
  );
  NAND _062_ (
    .A(_016_),
    .B(_015_),
    .Y(_017_)
  );
  NOR _063_ (
    .A(_017_),
    .B(_007_),
    .Y(_018_)
  );
  NOT _064_ (
    .A(data_out[1]),
    .Y(_019_)
  );
  NAND _065_ (
    .A(_007_),
    .B(_019_),
    .Y(_020_)
  );
  NAND _066_ (
    .A(_020_),
    .B(reset_L),
    .Y(_021_)
  );
  NOR _067_ (
    .A(_021_),
    .B(_018_),
    .Y(_000_[1])
  );
  NAND _068_ (
    .A(data_in1[2]),
    .B(selector),
    .Y(_022_)
  );
  NAND _069_ (
    .A(data_in0[2]),
    .B(_002_),
    .Y(_023_)
  );
  NAND _070_ (
    .A(_023_),
    .B(_022_),
    .Y(_024_)
  );
  NOR _071_ (
    .A(_024_),
    .B(_007_),
    .Y(_025_)
  );
  NOT _072_ (
    .A(data_out[2]),
    .Y(_026_)
  );
  NAND _073_ (
    .A(_007_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _074_ (
    .A(_027_),
    .B(reset_L),
    .Y(_028_)
  );
  NOR _075_ (
    .A(_028_),
    .B(_025_),
    .Y(_000_[2])
  );
  NAND _076_ (
    .A(data_in1[3]),
    .B(selector),
    .Y(_029_)
  );
  NAND _077_ (
    .A(data_in0[3]),
    .B(_002_),
    .Y(_030_)
  );
  NAND _078_ (
    .A(_030_),
    .B(_029_),
    .Y(_031_)
  );
  NOR _079_ (
    .A(_031_),
    .B(_007_),
    .Y(_032_)
  );
  NOT _080_ (
    .A(data_out[3]),
    .Y(_033_)
  );
  NAND _081_ (
    .A(_007_),
    .B(_033_),
    .Y(_034_)
  );
  NAND _082_ (
    .A(_034_),
    .B(reset_L),
    .Y(_035_)
  );
  NOR _083_ (
    .A(_035_),
    .B(_032_),
    .Y(_000_[3])
  );
  NAND _084_ (
    .A(data_in1[4]),
    .B(selector),
    .Y(_036_)
  );
  NAND _085_ (
    .A(data_in0[4]),
    .B(_002_),
    .Y(_037_)
  );
  NAND _086_ (
    .A(_037_),
    .B(_036_),
    .Y(_038_)
  );
  NOR _087_ (
    .A(_038_),
    .B(_007_),
    .Y(_039_)
  );
  NOT _088_ (
    .A(data_out[4]),
    .Y(_040_)
  );
  NAND _089_ (
    .A(_007_),
    .B(_040_),
    .Y(_041_)
  );
  NAND _090_ (
    .A(_041_),
    .B(reset_L),
    .Y(_042_)
  );
  NOR _091_ (
    .A(_042_),
    .B(_039_),
    .Y(_000_[4])
  );
  NAND _092_ (
    .A(data_in1[5]),
    .B(selector),
    .Y(_043_)
  );
  NAND _093_ (
    .A(data_in0[5]),
    .B(_002_),
    .Y(_044_)
  );
  NAND _094_ (
    .A(_044_),
    .B(_043_),
    .Y(_045_)
  );
  NOR _095_ (
    .A(_045_),
    .B(_007_),
    .Y(_046_)
  );
  NOT _096_ (
    .A(data_out[5]),
    .Y(_047_)
  );
  NAND _097_ (
    .A(_007_),
    .B(_047_),
    .Y(_048_)
  );
  NAND _098_ (
    .A(_048_),
    .B(reset_L),
    .Y(_049_)
  );
  NOR _099_ (
    .A(_049_),
    .B(_046_),
    .Y(_000_[5])
  );
  NOT _100_ (
    .A(reset_L),
    .Y(_050_)
  );
  NOR _101_ (
    .A(_007_),
    .B(_050_),
    .Y(_001_)
  );
  NOT _102_ (
    .A(selector),
    .Y(_002_)
  );
  NOT _103_ (
    .A(valid_in1),
    .Y(_003_)
  );
  NOR _104_ (
    .A(_003_),
    .B(_002_),
    .Y(_004_)
  );
  NOT _105_ (
    .A(valid_in0),
    .Y(_005_)
  );
  NOR _106_ (
    .A(_005_),
    .B(selector),
    .Y(_006_)
  );
  DFF _107_ (
    .C(clk),
    .D(_001_),
    .Q(valid_out)
  );
  DFF _108_ (
    .C(clk),
    .D(_000_[0]),
    .Q(data_out[0])
  );
  DFF _109_ (
    .C(clk),
    .D(_000_[1]),
    .Q(data_out[1])
  );
  DFF _110_ (
    .C(clk),
    .D(_000_[2]),
    .Q(data_out[2])
  );
  DFF _111_ (
    .C(clk),
    .D(_000_[3]),
    .Q(data_out[3])
  );
  DFF _112_ (
    .C(clk),
    .D(_000_[4]),
    .Q(data_out[4])
  );
  DFF _113_ (
    .C(clk),
    .D(_000_[5]),
    .Q(data_out[5])
  );
endmodule
